*** set up asterisk on centos 6 without freepbx

* install centos 6.x

* add users and access
useradd -m karl -s /bin/bash -G wheel -u 666 # etc
# uncomment wheel access in /etc/sudoers
# edit /etc/ssh/sshd_config
# Port
# PermitRootLogin no
# AllowX11Forwarding no
# SetPermitTunnel yes
# RSAAuthentication yes
# PubKeyAuthentication no
# PasswordAuthentication no

* kill firewall for now, fix it later
iptables -F
chkconfig --del iptables

* setup centos
yum groupremove "FCoE Storage Client"
yum groupremove "iSCSI Storage Client"
yum groupremove "Network file system client"
yum groupremove "Storage Availability Tools"
yum remove audit rpcbind selinux-policy selinux-policy-targeted
yum update

yum install man
yum install vim-enhanced gcc gcc-g++ make automake libtool autoconf
yum install mlocate lynx cvs git subversion strace ltrace wget lsof tcpdump
yum install openssh openssh-server openssh-clients
yum install openssl-devel
yum install ncurses-devel libxml2-devel newt-devel kernel-devel sqlite-devel
yum install libuuid-devel
yum install festival # if running festival locally

* install epel
su -c 'rpm -Uvh http://download.fedoraproject.org/pub/epel/6/i386/epel-release-6-8.noarch.rpm'

* add non-root user for asterisk
useradd -m asterisk -s /bin/false

* make sure hostname is in /etc/hosts
127.0.0.1 ceres

* build, install asterisk from source
as asterisk
cd /usr/local/src/asterisk-11.5.1
mkdir /opt/asterisk
chown/chgrp asterisk /opt/asterisk
#su asterisk?
./configure --libdir=/usr/lib64 --prefix=/opt/asterisk --sysconfdir=/opt/asterisk
  --localstatedir=/opt/asterisk
make menuselect # just do this and exit
make
make install
#exit # back to root?
make samples
make config #as root
edit /opt/asterisk/sbin/safe_asterisk ASTARGS="-U asterisk"

# test with console: /opt/asterisk/sbin/asterisk -r

* set up a q&d backups for when we fuck up
# backup asterisk!
tar -zc /opt/asterisk -f /opt/asterisk.tgz
# put /opt/asterisk/asterisk in a git repo, hope there are no keys in there!

* install pyst:
  (note that pystrix might be a more modern python AGI implemention)
  http://pyst.sourceforge.net/ https://pypi.python.org/pypi/pyst
  cd /usr/local/src/pyst...
  python setup.py install --prefix=/usr/local
  # I don't think we need to do this anymore
  ln -s /usr/local/lib/python2.6/site-packages/asterisk/ /usr/lib/python2.6/site-packages/

* install dyndns client
get a dyndns account for the box
http://dyn.com/support/clients/linux/inadyn/
XXX dyndns is bogus, get a better service.
download, build, install inadyn
cp bin/linux/inadyn /usr/local/sbin/
edit /etc/inadyn.conf
add /etc/init.d/inadyn
http://pastebin.com/7jnh340e
create links in /etc/rc.d/* (or get chkconfig to work)
Note that if inadyn stops working, dhcp breaks!  Try signing in to dyndns and
then restarting networking on the box if that happens.

* XXX remove the firewall again? should figire this out, or better yet, figure
  out how we can keep it
iptables -F
chkconfig --del iptables

* Addresses and ports:

forward ports on router:
5060-5070 udp (only 5060 is needed for 1 connection)
10000-20000 udp

edit sip.conf:
externhost=<dyndns address>
localnet=<ip/mask> # eg 10.0.0.0/255.255.255.0
nat=force_rport,comedia ;yes 
#then restart console, or sip reload sip_nat.conf
#if we have a static IP, use externip instead of externhost

* Get callcentic DID
https://my.callcentric.com/home.php
preferences:
outbound simultaneous calls: multiple
max call duration: 30 minutes (or whatever)

* Get callcentric free phone number
XXX do we need to log in to the web or call the number monthly to keep it?

* Setup SIP trunk for an outgoing route with callcentric DID
#https://my.callcentric.com/how_to_start.php?pid=1

# edit sip.conf
# include a file with secrets
#include sip_callcentric.conf
# add general options
# this probably prevents using other DIDs
# XXX This assumes extension 666, does this require anything in the pap device?
#     Are we using channel 666 for an outgoing extension?
[general]
context=from-callcentric
session-timers=refuse

; context for a sip user ie pap device
[666]
context=to-callcentric
type=friend
username=666
host=dynamic

[667]
; repeat for each sip user 

# edit sip_callcentric.conf
# DO NOT CHECK THIS IN, THIS IS THE CALLCENTRIC SECRETS FILE
[general](+)
register => XXX:XXX@callcentric.com
[callcentric](+)
defaultuser=XXX
fromuser=XXX
secret=XXX

; context for a sip user ie pap device
[666](+)
secret=XXX

[667]
; repeat for each sip user 

# test:
# sip reload sip.conf
# sip show registry
# sip show peers

* Setup SIP trunk for an incoming route with callcentric DID
#https://my.callcentric.com/how_to_start.php?pid=1

# edit extensions.conf
# put secrets in extensions_secret.conf
# include extensions_secret.conf
[from-callcentric]
;exten => s,1,Dial(SIP/30000)
exten => s,1,Playback(beep)
exten => s,n,Hangup

[outgoingdialtone]
; domestic call                                                                 
; XXX get a better pattern                                                      
exten => _1NXXNXXXXXX,1,Dial(SIP/${EXTEN}@callcentric)

[to-callcentric]
# this does not seem to work... probably need another sip number
# to test it on
# exten => _XX,1,Dial(SIP/${EXTEN}@callcentric)
# current contents:
#exten => 777,1,Goto(1337,s,1) # this works, has much lag...
#exten => 999,1,DISA(no-password,outgoingdialtone) # outgoing dialtone
# one extension for every sip user destination, they can be shared
exten => 999,1,Goto(demo-menu,s,1)

# logging
# update logger.conf

# test:
# callcentric click2dial with the callcentric web UI
# call the callcentricn number from a phone

# VERY basic spa-3000(basically any PAP device) setup:
# always login as admin, set view to advanced
# XXX need to add password on the PAP
# some spa settings
sip port=5060 # any available, not sure if this needs to be set
proxy=XXX # domain name of asterisk server
outbound proxy=XXX # same as proxy
use outbound proxy=yes
register=yes
nat mapping enable=yes
userID=666 # example configuration above in sip_callcentric.conf
password=XXX_secret
# some dial strings below:
# straight out, dials extension automatically
# we probably want this - send user to extension 999
S0<:999>
# the default string can be useful for testing
# this has lag
#*xx|[3469]11|0|00|[2-9]xxxxxx|1xxx[2-9]xxxxxxS0|xxxxxxxxxxxx

# now spa-3000 sends user to extension 999 as user 666
# sip.conf says user 666 is the to-callcentric extension
# extensions.conf says what to do when 999 called in the to-callcentric context

# test:
# pick up the pap device phone, get a dial tone provided by the pap
# pap says you are extension 666
# sip.conf puts us in in context 666 / to-callcentric
# to-callcentric says what we can do - e.g. extensions dialable

# start adding the IVR and destinations

[to-callcentric]
exten => 999,1,Goto(demo-menu,s,1)

[demo-menu]
   exten => s,1,Answer(500)
   same => n(loop),Background(digits/6)
   same => n(loop),Background(digits/6)
   same => n(loop),Background(digits/6)
   same => n,WaitExten()
   same => n,Goto(2)
   exten => 1,1,DISA(no-password,outgoingdialtone)
   exten => 2,1,Goto(1337,s,1)

* setup festival server
# XXX this is not exactly safe
# edit /etc/rc.d/rc.local
sudo -u nobody festival --server &

* setup firewall
# XXX should do this earlier
# XXX will need more ports for iax2 later - asterisk to asterisk

*filter
:INPUT DROP [4:524]
:FORWARD DROP [0:0]
:OUTPUT ACCEPT [1547:458027]
-A INPUT -i lo -j ACCEPT
-A INPUT -s 24.22.37.138/32 -j ACCEPT
-A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT
-A INPUT -p tcp -m tcp --dport 42422 -j ACCEPT
-A INPUT -s 204.11.192.0/24 -p udp -m udp --dport 5060:5080 -j ACCEPT
-A INPUT -s 204.11.192.0/24 -p udp -m udp --dport 10000:20000 -j ACCEPT
-A INPUT -s 66.193.176.35/32 -p udp -m udp --dport 5060:5080 -j ACCEPT
-A INPUT -s 66.193.176.35/32 -p udp -m udp --dport 10000:20000 -j ACCEPT
-A INPUT -s 66.193.176.54/32 -p udp -m udp --dport 5060:5080 -j ACCEPT
-A INPUT -s 66.193.176.54/32 -p udp -m udp --dport 10000:20000 -j ACCEPT
-A INPUT -s 66.193.176.58/32 -p udp -m udp --dport 5060:5080 -j ACCEPT
-A INPUT -s 66.193.176.58/32 -p udp -m udp --dport 10000:20000 -j ACCEPT
-A INPUT -s 66.54.140.46/32 -p udp -m udp --dport 5060:5080 -j ACCEPT
-A INPUT -s 66.54.140.47/32 -p udp -m udp --dport 5060:5080 -j ACCEPT
-A INPUT -s 66.54.140.46/32 -p udp -m udp --dport 10000:20000 -j ACCEPT
-A INPUT -s 66.54.140.47/32 -p udp -m udp --dport 10000:20000 -j ACCEPT
COMMIT

# how to set up that file

# clear all
iptables -F

# allow localhost
iptables -A INPUT -i lo -j ACCEPT
iptables -A INPUT --src futel2.dyndns.org -j ACCEPT
# allow established connections
iptables -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT
# let ssh in
iptables -A INPUT -p tcp --dport 42422 -j ACCEPT

# close everything
iptables -P INPUT DROP
iptables -P FORWARD DROP
iptables -P OUTPUT ACCEPT

# callcentric
iptables -A INPUT -p udp -m udp -s 204.11.192.0/24 --dport 5060:5080 -j ACCEPT
iptables -A INPUT -p udp -m udp -s 204.11.192.0/24 --dport 10000:20000 -j ACCEPT
iptables -A INPUT -p udp -m udp -s 66.193.176.35 --dport 5060:5080 -j ACCEPT
iptables -A INPUT -p udp -m udp -s 66.193.176.35 --dport 10000:20000 -j ACCEPT
iptables -A INPUT -p udp -m udp -s 66.193.176.54 --dport 5060:5080 -j ACCEPT
iptables -A INPUT -p udp -m udp -s 66.193.176.54 --dport 10000:20000 -j ACCEPT
iptables -A INPUT -p udp -m udp -s 66.193.176.58 --dport 5060:5080 -j ACCEPT
iptables -A INPUT -p udp -m udp -s 66.193.176.58 --dport 10000:20000 -j ACCEPT
# ipkall
iptables -A INPUT -p udp -m udp -s 66.54.140.46,66.54.140.47 --dport 5060:5080 -j ACCEPT
iptables -A INPUT -p udp -m udp -s 66.54.140.46,66.54.140.47 --dport 10000:20000 -j ACCEPT

# then service iptables save

* general testing:
/opt/asterisk/sbin/asterisk -r for console
core restart gracefully
